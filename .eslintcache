[{"C:\\Users\\ogund\\OneDrive\\Desktop\\projects\\scss-assessment-master\\src\\index.js":"1","C:\\Users\\ogund\\OneDrive\\Desktop\\projects\\scss-assessment-master\\src\\App.js":"2","C:\\Users\\ogund\\OneDrive\\Desktop\\projects\\scss-assessment-master\\src\\MultiSelect\\MultiSelect.js":"3","C:\\Users\\ogund\\OneDrive\\Desktop\\projects\\scss-assessment-master\\src\\SingleSelect\\SingleSelect.js":"4"},{"size":197,"mtime":1612028049608,"results":"5","hashOfConfig":"6"},{"size":1341,"mtime":1612028049532,"results":"7","hashOfConfig":"6"},{"size":879,"mtime":1612028049642,"results":"8","hashOfConfig":"6"},{"size":2277,"mtime":1612052148209,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"180sy2n",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"C:\\Users\\ogund\\OneDrive\\Desktop\\projects\\scss-assessment-master\\src\\index.js",[],["21","22"],"C:\\Users\\ogund\\OneDrive\\Desktop\\projects\\scss-assessment-master\\src\\App.js",[],"C:\\Users\\ogund\\OneDrive\\Desktop\\projects\\scss-assessment-master\\src\\MultiSelect\\MultiSelect.js",[],["23","24"],"C:\\Users\\ogund\\OneDrive\\Desktop\\projects\\scss-assessment-master\\src\\SingleSelect\\SingleSelect.js",["25"],"import React, {useState, useEffect} from 'react'\nimport './SingleSelect.scss'\n\nconst SingleSelect = props => {\n\n    /*\n\n        This component is built for you. Just skin it with the scss file. See the example.png. \n\n        Suggestions:\n            rollover states on buttons.\n            staging animations.\n            make feedback a modal window.\n\n    */\n\n    const [selected, setSelected] = useState(-1);\n\n    const handleSelect = (i) => {\n        if(selected === -1) setSelected(i);\n    }\n\n    const selectedOption = props.data.options[selected]\n\n    return (\n        <div className={`SingleSelect`}>\n            <div className={`card-container`}>\n                <div className={`header-container`}>\n                    <h1>\n                        {props.data.questionText}\n                    </h1>\n                </div>\n                <div className={`options`}>\n                {\n                    selected === -1 &&\n                    props.data.options.map((option, optionIndex) => {\n                        return <button className={`option-button`} onClick={()=>{handleSelect(optionIndex)}}>{option.text}</button>\n                    })\n                }\n                </div>\n            </div>\n            {\n                selected > -1 &&\n                <div className={`feedback-container`}>\n                    <div className={`feedback ${selectedOption.correct ? 'correct' : 'incorrect'}`}>\n                        <h1 className={`feedback-text`}>\n                            {selectedOption.correct ?\n                                props.data.feedback.correct.header\n                            :\n                                props.data.feedback.incorrect.header\n                            }\n                        </h1>\n                        <p>\n                            {selectedOption.correct ?\n                                props.data.feedback.correct.body\n                            :\n                                props.data.feedback.incorrect.body\n                            }\n                        </p>\n                        <button className={`feedback-button`} onClick={props.onComplete}>OK</button>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default SingleSelect",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"26","replacedBy":"30"},{"ruleId":"28","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":26,"nodeType":"34","messageId":"35","endLine":1,"endColumn":35},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],["36"],["37"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]